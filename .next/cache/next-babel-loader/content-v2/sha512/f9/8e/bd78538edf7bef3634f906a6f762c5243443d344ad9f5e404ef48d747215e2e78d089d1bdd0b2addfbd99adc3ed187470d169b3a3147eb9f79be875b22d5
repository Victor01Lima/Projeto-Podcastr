{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/pages/episodes/[slug].tsx\";\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../../utils/convertDurationToTimeString';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport { ptBR } from 'date-fns/locale';\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\nexport default function Episode({\n  episode\n}) {\n  const {\n    play\n  } = usePlayer();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => play(episode),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 h\n\n  };\n};","map":{"version":3,"sources":["/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/pages/episodes/[slug].tsx"],"names":["api","convertDurationToTimeString","format","parseISO","ptBR","styles","Image","Link","usePlayer","Episode","episode","play","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { useRouter} from 'next/router';\nimport { GetStaticProps, GetStaticPaths } from 'next';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../../utils/convertDurationToTimeString';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport { ptBR } from 'date-fns/locale';\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nimport Link from 'next/link'\nimport { useContext } from 'react';\nimport { PlayerContext, usePlayer } from '../../contexts/PlayerContext';\ntype Episode = {\n    id: string;\n    title: string;\n    members: string;\n    publishedAt: string;\n    url: string;\n    durationAsString:string;\n    thumbnail: string;\n    description: string;\n    duration:number;\n\n}\n\ntype EpisodeProps = {\n    episode: Episode;\n}\n\nexport default function Episode({episode}: EpisodeProps){\n\n    const {play} = usePlayer();\n\n\n    return(\n        <div className={styles.episode}>\n            <div className={styles.thumbnailContainer}>\n            <Link href=\"/\">\n                <button>\n                    <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n                </button>\n                </Link>\n                <Image\n                 width={700}\n                 height={160}\n                 src={episode.thumbnail}\n                 objectFit=\"cover\"\n                />\n                <button type=\"button\" onClick = {()=> play(episode)}>\n                    <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\n                </button>\n            </div>\n\n            <header>\n                <h1>{episode.title}</h1>\n                <span>{episode.members}</span>\n                <span>{episode.publishedAt}</span>\n                <span>{episode.durationAsString}</span>\n            </header>\n            \n            <div className={styles.description} dangerouslySetInnerHTML={{__html:episode.description}}/>\n\n        </div>\n    )\n}\n\n\nexport const getStaticPaths: GetStaticPaths = async () =>{\n    return{\n        paths:[],\n        fallback: 'blocking'\n    }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n        const {slug} = ctx.params;\n\n        const {data} = await api.get(`/episodes/${slug}`)\n\n\n\n    const episode = {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.thumbnail,\n        members: data.members,\n        publishedAt:  format(parseISO(data.published_at),'d MMM yy',{locale: ptBR}),\n        duration: Number(data.file.duration),\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n        description: data.description,\n        url: data.file.url,\n      };\n\n\n\n    return {\n        props: {\n            episode,\n        },\n        revalidate:60*60*24, // 24 h\n    }\n}"]},"metadata":{},"sourceType":"module"}