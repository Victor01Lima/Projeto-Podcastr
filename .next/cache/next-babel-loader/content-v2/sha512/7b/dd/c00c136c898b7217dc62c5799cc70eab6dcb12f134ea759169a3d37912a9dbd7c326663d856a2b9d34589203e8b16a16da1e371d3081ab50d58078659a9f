{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/contexts/PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingSate(state) {\n    setIsPlaying(state);\n  }\n\n  function playNext() {\n    var nextEpisodeindex = currentEpisodeIndex + 1;\n\n    if (nextEpisodeindex >= episodeList.length) {\n      return;\n    }\n\n    setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n  }\n\n  function playPrevius() {\n    if (currentEpisodeIndex > 0) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      playList: playList,\n      isPlaying: isPlaying,\n      playNext: playNext,\n      playPrevius: playPrevius,\n      togglePlay: togglePlay,\n      setPlayingSate: setPlayingSate\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingSate","state","playNext","nextEpisodeindex","length","playPrevius"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAkD,OAAlD;AAwBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAOP,OAAO,SAASG,qBAAT,OAAuE;AAAA;;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;;AAAA,kBACpCH,QAAQ,CAAC,EAAD,CAD4B;AAAA,MACnEI,WADmE;AAAA,MACtDC,cADsD;;AAAA,mBAErBL,QAAQ,CAAC,CAAD,CAFa;AAAA,MAEnEM,mBAFmE;AAAA,MAE9CC,sBAF8C;;AAAA,mBAGxCP,QAAQ,CAAC,KAAD,CAHgC;AAAA,MAGnEQ,SAHmE;AAAA,MAGxDC,YAHwD;;AAK5E,WAASC,IAAT,CAAcC,OAAd,EAA+B;AAC7BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACC;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAiD;AAC7CT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAKH,WAASM,UAAT,GAAqB;AACnBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACC;;AACH,WAASQ,cAAT,CAAwBC,KAAxB,EAAsC;AAChCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACH;;AAGD,WAASC,QAAT,GAAmB;AACf,QAAMC,gBAAgB,GAAGb,mBAAmB,GAAC,CAA7C;;AACA,QAAGa,gBAAgB,IAAIf,WAAW,CAACgB,MAAnC,EAA0C;AACtC;AACH;;AACDb,IAAAA,sBAAsB,CAACD,mBAAmB,GAAC,CAArB,CAAtB;AACH;;AAED,WAASe,WAAT,GAAsB;AAClB,QAAGf,mBAAmB,GAAC,CAAvB,EAAyB;AACrBC,MAAAA,sBAAsB,CAACD,mBAAmB,GAAC,CAArB,CAAtB;AACH;AAEJ;;AAGH,sBACE,QAAC,aAAD,CAAe,QAAf;AACA,IAAA,KAAK,EAAE;AACHF,MAAAA,WAAW,EAAXA,WADG;AAEHE,MAAAA,mBAAmB,EAAnBA,mBAFG;AAGHI,MAAAA,IAAI,EAAJA,IAHG;AAIHE,MAAAA,QAAQ,EAARA,QAJG;AAKHJ,MAAAA,SAAS,EAATA,SALG;AAMHU,MAAAA,QAAQ,EAARA,QANG;AAOHG,MAAAA,WAAW,EAAXA,WAPG;AAQHN,MAAAA,UAAU,EAAVA,UARG;AASHC,MAAAA,cAAc,EAAdA;AATG,KADP;AAAA,cAcKb;AAdL;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhEeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState, ReactNode} from 'react';\n\ntype Episode={\n    title: string;\n    members: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n}\n\n\ntype PlayerContextData = {\n    episodeList: Episode[];\n    currentEpisodeIndex: number;  \n    isPlaying : boolean;\n    play: (episode: Episode)=> void;\n    playList: (list: Episode[], index:number)=> void;\n    togglePlay: ()=> void;\n    playNext: ()=> void;\n    playPrevius: ()=> void;\n    setPlayingSate: (state:boolean)=> void;\n\n};\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\ntype PlayerContextProviderProps = {\n    children : ReactNode;\n}\n\n\nexport function PlayerContextProvider({ children}: PlayerContextProviderProps){\n    const [episodeList, setEpisodeList] = useState([]);\n    const [currentEpisodeIndex, setCurrentEpisodeIndex]= useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n  function play(episode: Episode){\n    setEpisodeList([episode])\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n    }\n\n    function playList(list: Episode[], index: number){\n        setEpisodeList(list);\n        setCurrentEpisodeIndex(index);\n        setIsPlaying(true);\n    }\n\n\n\n\n  function togglePlay(){\n    setIsPlaying(!isPlaying);\n    }\n  function setPlayingSate(state:boolean){\n        setIsPlaying(state);\n    }\n\n\n    function playNext(){\n        const nextEpisodeindex = currentEpisodeIndex+1;\n        if(nextEpisodeindex >= episodeList.length){\n            return;\n        }\n        setCurrentEpisodeIndex(currentEpisodeIndex+1);\n    }\n\n    function playPrevius(){\n        if(currentEpisodeIndex>0){\n            setCurrentEpisodeIndex(currentEpisodeIndex-1);\n        }\n\n    }\n\n\n  return (\n    <PlayerContext.Provider \n    value={{\n        episodeList,\n        currentEpisodeIndex,\n        play,\n        playList,\n        isPlaying,\n        playNext,\n        playPrevius,\n        togglePlay,\n        setPlayingSate\n        }}\n        >\n\n        {children}\n\n    </PlayerContext.Provider>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}