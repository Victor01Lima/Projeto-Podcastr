{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport Head from 'next/head';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home | Podcastr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Episode, \"8TUf63ic1N4hwlGR+zCqMZamj9Q=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/pages/episodes/[slug].tsx"],"names":["styles","Image","Link","usePlayer","Head","Episode","episode","play","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AAOA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAAwBC,SAAxB,QAAyC,8BAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAkBA,eAAe,SAASC,OAAT,OAAyC;AAAA;;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;;AAAA,mBAErCH,SAAS,EAF4B;AAAA,MAE7CI,IAF6C,cAE7CA,IAF6C;;AAKpD,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACM,OAAvB;AAAA,4BACK,QAAC,IAAD;AAAA,6BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADL,eAII;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACQ,kBAAvB;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACI;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAMI,QAAC,KAAD;AACC,QAAA,KAAK,EAAE,GADR;AAEC,QAAA,MAAM,EAAE,GAFT;AAGC,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHd;AAIC,QAAA,SAAS,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAI;AAAA,iBAAKF,IAAI,CAACD,OAAD,CAAT;AAAA,SAAjC;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAqBI;AAAA,8BACI;AAAA,kBAAKA,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAON,OAAO,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eA4BI;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,WAAvB;AAAoC,MAAA,uBAAuB,EAAE;AAACC,QAAAA,MAAM,EAACT,OAAO,CAACQ;AAAhB;AAA7D;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAtCuBT,O;UAELF,S;;;KAFKE,O","sourcesContent":["import { useRouter} from 'next/router';\nimport { GetStaticProps, GetStaticPaths } from 'next';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../../utils/convertDurationToTimeString';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport { ptBR } from 'date-fns/locale';\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nimport Link from 'next/link'\nimport { useContext } from 'react';\nimport { PlayerContext, usePlayer } from '../../contexts/PlayerContext';\nimport Head from 'next/head';\ntype Episode = {\n    id: string;\n    title: string;\n    members: string;\n    publishedAt: string;\n    url: string;\n    durationAsString:string;\n    thumbnail: string;\n    description: string;\n    duration:number;\n\n}\n\ntype EpisodeProps = {\n    episode: Episode;\n}\n\nexport default function Episode({episode}: EpisodeProps){\n\n    const {play} = usePlayer();\n\n\n    return(\n        <div className={styles.episode}>\n             <Head>\n                <title>Home | Podcastr</title>\n            </Head>\n            <div className={styles.thumbnailContainer}>\n            <Link href=\"/\">\n                <button>\n                    <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n                </button>\n                </Link>\n                <Image\n                 width={700}\n                 height={160}\n                 src={episode.thumbnail}\n                 objectFit=\"cover\"\n                />\n                <button type=\"button\" onClick = {()=> play(episode)}>\n                    <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\n                </button>\n            </div>\n\n            <header>\n                <h1>{episode.title}</h1>\n                <span>{episode.members}</span>\n                <span>{episode.publishedAt}</span>\n                <span>{episode.durationAsString}</span>\n            </header>\n            \n            <div className={styles.description} dangerouslySetInnerHTML={{__html:episode.description}}/>\n\n        </div>\n    )\n}\n\n\nexport const getStaticPaths: GetStaticPaths = async () =>{\n    return{\n        paths:[],\n        fallback: 'blocking'\n    }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n        const {slug} = ctx.params;\n\n        const {data} = await api.get(`/episodes/${slug}`)\n\n\n\n    const episode = {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.thumbnail,\n        members: data.members,\n        publishedAt:  format(parseISO(data.published_at),'d MMM yy',{locale: ptBR}),\n        duration: Number(data.file.duration),\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n        description: data.description,\n        url: data.file.url,\n      };\n\n\n\n    return {\n        props: {\n            episode,\n        },\n        revalidate:60*60*24, // 24 h\n    }\n}"]},"metadata":{},"sourceType":"module"}