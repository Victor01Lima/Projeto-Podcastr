{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/contexts/PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingSate(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingSate: setPlayingSate\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","togglePlay","setPlayingSate","state"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAuC,OAAvC;AAqBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAEP,OAAO,SAASG,qBAAT,OAA2C;AAAA;;AAAA,MAAVC,QAAU,QAAVA,QAAU;;AAAA,kBACRH,QAAQ,CAAC,EAAD,CADA;AAAA,MACvCI,WADuC;AAAA,MAC1BC,cAD0B;;AAAA,mBAEOL,QAAQ,CAAC,CAAD,CAFf;AAAA,MAEvCM,mBAFuC;AAAA,MAElBC,sBAFkB;;AAAA,mBAGZP,QAAQ,CAAC,KAAD,CAHI;AAAA,MAGvCQ,SAHuC;AAAA,MAG5BC,YAH4B;;AAKhD,WAASC,IAAT,CAAcC,OAAd,EAAsB;AACpBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACC;;AAEH,WAASG,UAAT,GAAqB;AACnBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACC;;AACH,WAASK,cAAT,CAAwBC,KAAxB,EAAsC;AAChCL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACH;;AACH,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACV,MAAAA,WAAW,EAAXA,WAAD;AAAaE,MAAAA,mBAAmB,EAAnBA,mBAAb;AAAkCI,MAAAA,IAAI,EAAJA,IAAlC;AAAwCF,MAAAA,SAAS,EAATA,SAAxC;AAAmDI,MAAAA,UAAU,EAAVA,UAAnD;AAA+DC,MAAAA,cAAc,EAAdA;AAA/D,KAA/B;AAAA,cAEKV;AAFL;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzBeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState} from 'react';\n\ntype Episode={\n    title: string;\n    members: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n}\n\n\ntype PlayerContextData = {\n    episodeList: Episode[];\n    currentEpisodeIndex: number;  \n    isPlaying : boolean;\n    play: (episode: Episode)=> void;\n    togglePlay: ()=> void;\n    setPlayingSate: (state:boolean)=> void;\n\n};\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\nexport function PlayerContextProvider({ children}){\n    const [episodeList, setEpisodeList] = useState([]);\n    const [currentEpisodeIndex, setCurrentEpisodeIndex]= useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n  function play(episode){\n    setEpisodeList([episode])\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n    }\n\n  function togglePlay(){\n    setIsPlaying(!isPlaying);\n    }\n  function setPlayingSate(state:boolean){\n        setIsPlaying(state);\n    }\n  return (\n    <PlayerContext.Provider value={{episodeList,currentEpisodeIndex, play, isPlaying, togglePlay, setPlayingSate}}>\n\n        {children}\n\n    </PlayerContext.Provider>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}