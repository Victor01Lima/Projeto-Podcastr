{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { convertDurationToTimeString } from '../../../utils/convertDurationToTimeString';\nexport default function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      togglePlay = _usePlayer.togglePlay,\n      setPlayingSate = _usePlayer.setPlayingSate,\n      playNext = _usePlayer.playNext,\n      playPrevius = _usePlayer.playPrevius,\n      hasNext = _usePlayer.hasNext,\n      isLooping = _usePlayer.isLooping,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      isShuffling = _usePlayer.isShuffling,\n      toggleLoop = _usePlayer.toggleLoop,\n      hasPrevious = _usePlayer.hasPrevious,\n      clearPlayerState = _usePlayer.clearPlayerState;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um Podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        loop: isLooping,\n        onPlay: function onPlay() {\n          return setPlayingSate(true);\n        },\n        onPause: function onPause() {\n          return setPlayingSate(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length == 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevius,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"XQD2Q++A75As9t1/fueW4y19fj0=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/media/victor/HD1/Projetos/ReactJS/NLW_5/Projeto-Podcastr/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","usePlayer","styles","Slider","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","setPlayingSate","playNext","playPrevius","hasNext","isLooping","toggleShuffle","isShuffling","toggleLoop","hasPrevious","clearPlayerState","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["\nimport Image from 'next/image';\nimport {  useRef , useEffect, useState} from 'react';\nimport { PlayerContext, usePlayer } from '../../contexts/PlayerContext';\nimport  styles from './styles.module.scss';\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\nimport { convertDurationToTimeString } from '../../../utils/convertDurationToTimeString';\nimport Episode from '../../pages/episodes/[slug]';\n\nexport default function Player(){\n\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [progress, setProgress] = useState(0);\n\n\n\n    const {\n        episodeList,\n         currentEpisodeIndex, \n         isPlaying,\n          togglePlay, \n         setPlayingSate,\n         playNext,\n         playPrevius,\n         hasNext,\n         isLooping,\n         toggleShuffle,\n         isShuffling,\n         toggleLoop,\n         hasPrevious,\n         clearPlayerState,\n        } = usePlayer();\n\n\n    useEffect(()=>{\n        if(!audioRef.current){\n            return;\n        }\n        if(isPlaying){\n            audioRef.current.play();\n        }\n        else{\n            audioRef.current.pause();\n        }\n    },[isPlaying])\n\n    function setupProgressListener(){\n        audioRef.current.currentTime=0;\n\n        audioRef.current.addEventListener('timeupdate',() =>{\n            setProgress(Math.floor(audioRef.current.currentTime));\n        });\n    }\n\n    function handleSeek(amount: number){\n        audioRef.current.currentTime=amount;\n        setProgress(amount);\n    }\n    function handleEpisodeEnded(){\n        if(hasNext){\n            playNext();\n        }\n        else{\n            clearPlayerState();\n        }\n    }\n\n    const episode = episodeList[currentEpisodeIndex];\n\n    return(\n        <div className={styles.playerContainer}>\n            <header>\n                <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\n                <strong>Tocando agora </strong>\n            </header>\n\n            {episode ? (\n                <div className={styles.currentEpisode}>\n                    <Image\n                     width={592} \n                     height={592}\n                     src={episode.thumbnail}\n                     objectFit=\"cover\"\n                     />\n                     <strong>{episode.title}</strong>\n                     <span>{episode.members}</span>\n                </div>\n            ) : (\n                <div className={styles.emptyPlayer}>\n                    <strong>Selecione um Podcast para ouvir</strong>\n                </div>\n            )}\n\n            <footer className={!episode ? styles.empty : ''}>\n                <div className={styles.progress}>\n                    <span>{convertDurationToTimeString(progress)}</span>\n                        <div className={styles.slider}>\n                           {episode ? (\n                                <Slider\n                                    max={episode.duration}\n                                    value={progress}\n                                    onChange={handleSeek}\n                                    trackStyle={{backgroundColor:'#04d361'}} \n                                    railStyle={{backgroundColor:'#9f75ff'}}\n                                    handleStyle={{borderColor: '#04d361',borderWidth:4}}\n                                />\n                           ) : (\n                            <div className={styles.emptySlider}/>\n                           )}\n                        </div>\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n                </div>\n\n\n                  {episode &&(\n                      <audio\n                          src={episode.url}\n                          ref={audioRef}\n                          autoPlay\n                          onEnded={handleEpisodeEnded}\n                          loop = {isLooping}\n                          onPlay={() => setPlayingSate(true)}\n                          onPause={() => setPlayingSate(false)}\n                          onLoadedMetadata = {setupProgressListener}\n                      />\n                  ) }              \n\n\n                <div className={styles.buttons}>\n                    <button \n                    type=\"button\" \n                    disabled={!episode || episodeList.length==1}\n                    onClick={toggleShuffle}\n                     className={isShuffling ? styles.isActive : ''}\n                    >\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\n                    </button>\n                    <button type=\"button\" onClick={playPrevius} disabled={!episode || !hasPrevious}>\n                        <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\n                    </button>\n                    <button type=\"button\" className={styles.playButton} disabled={!episode} onClick={togglePlay}>\n                        {isPlaying\n                        ? <img src=\"/pause.svg\" alt=\"Tocar\"/>\n                        : <img src=\"/play.svg\" alt=\"Tocar\"/>\n                    }\n\n                    </button>\n                    <button type=\"button\" onClick ={playNext} disabled={!episode || !hasNext}>\n                        <img src=\"/play-next.svg\" alt=\"Tocar próxima\"/>\n                    </button>\n                    <button type=\"button\"\n                     disabled={!episode}\n                     onClick={toggleLoop}\n                     className={isLooping ? styles.isActive : ''}\n                     >\n                        <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n                    </button>\n                </div>\n            </footer>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}